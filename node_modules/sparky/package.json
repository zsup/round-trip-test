{
  "name": "sparky",
  "description": "Sparky is a simple node.js library for communicating with a Spark core. Sparky wraps the four default methods (analogRead, analogWrite, digitalRead, digitalWrite), and has a run method for any custom firmware methods on your SparkCore.",
  "version": "0.1.0",
  "homepage": "https://github.com/kevingrandon/sparky",
  "author": {
    "name": "Kevin Grandon",
    "email": "kevingrandon@yahoo.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kevingrandon/sparky.git"
  },
  "bugs": {
    "url": "https://github.com/kevingrandon/sparky/issues"
  },
  "licenses": [
    {
      "type": "MPL"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "keywords": [],
  "readmeFilename": "README.md",
  "readme": "Sparky\n=============================\nSparky is a simple node.js library for communicating with a Spark core. Sparky wraps the four default methods (analogRead, analogWrite, digitalRead, digitalWrite), and has a run method for any custom firmware methods on your SparkCore.\n\nInstallation\n-----------------------------\n```\nnpm install sparky\n```\n\nUsage\n-----------------------------\nTurn the built-in LED on.\n\n```\nvar Sparky = require('sparky')\n\nvar sparky = new Sparky({\n\tdeviceId: 'your device id',\n\ttoken: 'your access token',\n})\nsparky.digitalWrite('D7', 'HIGH');\n```\n\nBlinking the built-in LED.\n\n```\nvar Sparky = require('sparky')\n\nvar sparky = new Sparky(config);\nvar val = 0;\n(function toggle() {\n\tval = 1 - val;\n\tsparky.digitalWrite('D7', val);\n\tsetTimeout(toggle, 1000);\n})();\n```\n\nRun a custom command from your SparkCore firmware.\n```\nvar Sparky = require('sparky')\n\nvar sparky = new Sparky({\n\tdeviceId: 'your device id',\n\ttoken: 'your access token',\n})\nsparky.run('MyCustomFunction', 'what,ever,you,want', callback);\n```\n\n",
  "_id": "sparky@0.1.0",
  "_from": "sparky@"
}
